{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heaven\\\\Desktop\\\\react-first\\\\react-social\\\\src\\\\Components\\\\Dialogs\\\\index.js\";\nimport React from 'react';\nimport { addMessageActionCreator, updateNewMessageActionCreator } from \"../../Redux/dialogs-reducer\";\nimport { connect } from \"react-redux\";\nimport classes from './style.module.css';\nimport DialogItem from \"./DialogItem\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsFunction = props => {\n  const dialogsElements = props.dialogs.map(element => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: element.name,\n    id: element.id,\n    avatar: element.avatar\n  }, element.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 58\n  }, this));\n  const messagesElements = props.message.map(element => /*#__PURE__*/_jsxDEV(Message, {\n    message: element.message,\n    id: element.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 59\n  }, this));\n\n  const addMessage = () => {\n    props.addMessage();\n  };\n\n  const changeText = e => {\n    props.changeText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogs_items,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messages,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.text,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: changeText,\n          value: props.newMessageText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addMessage,\n          children: \"add message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogsFunction;\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage.dialogsData,\n    message: state.dialogsPage.messagesData,\n    newMessageText: state.dialogsPage.newMessageText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    },\n    changeText: text => {\n      dispatch(updateNewMessageActionCreator(text));\n    }\n  };\n};\n\nconst Dialogs = connect(mapStateToProps, mapDispatchToProps)(DialogsFunction);\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsFunction\");","map":{"version":3,"sources":["C:/Users/Heaven/Desktop/react-first/react-social/src/Components/Dialogs/index.js"],"names":["React","addMessageActionCreator","updateNewMessageActionCreator","connect","classes","DialogItem","Message","DialogsFunction","props","dialogsElements","dialogs","map","element","name","id","avatar","messagesElements","message","addMessage","changeText","e","target","value","dialogs_items","messages","text","newMessageText","mapStateToProps","state","dialogsPage","dialogsData","messagesData","mapDispatchToProps","dispatch","Dialogs"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport classes from './style.module.css';\r\nimport DialogItem from \"./DialogItem\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nconst DialogsFunction = (props) => {\r\n    const dialogsElements = props.dialogs.map(element => <DialogItem name={element.name} key={element.id} id={element.id}\r\n                                                                     avatar={element.avatar}/>);\r\n    const messagesElements = props.message.map(element => <Message message={element.message} id={element.id}/>);\r\n\r\n    const addMessage = () => {\r\n        props.addMessage();\r\n    };\r\n    const changeText = (e) => {\r\n        props.changeText(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div className={classes.text}>\r\n                <div className=\"\">\r\n                    <textarea onChange={changeText} value={props.newMessageText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addMessage}>add message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogsData,\r\n        message: state.dialogsPage.messagesData,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        changeText: (text) => {\r\n            dispatch(updateNewMessageActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst Dialogs = connect(mapStateToProps, mapDispatchToProps)(DialogsFunction);\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}