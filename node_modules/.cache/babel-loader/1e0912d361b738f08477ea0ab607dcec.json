{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heaven\\\\Desktop\\\\react-first\\\\react-social\\\\src\\\\Redux\\\\films-reducer.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyComponent() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Примечание: пустой массив зависимостей [] означает, что\n  // этот useEffect будет запущен один раз\n  // аналогично componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n    // чтобы не перехватывать исключения из ошибок в самих компонентах.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", item.price]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = MyComponent;\n\n_s(MyComponent, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\nconst filmsReducer = (state = initialState, action) => {\n  return state;\n};\n\nexport default filmsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["C:/Users/Heaven/Desktop/react-first/react-social/src/Redux/films-reducer.js"],"names":["MyComponent","error","setError","useState","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","map","item","name","price","id","filmsReducer","state","initialState","action"],"mappings":";;;;;AAAA,SAASA,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CAHmB,CAKnB;AACA;AACA;;AACAK,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACM,MAAD,CAAR;AACH,KANT,EAOQ;AACA;AACCZ,IAAAA,KAAD,IAAW;AACPI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAZT;AAcH,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,2DAAcA,KAAK,CAACa,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBACI;AAAA,gBACKE,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACX;AAAA,mBACKA,IAAI,CAACC,IADV,OACiBD,IAAI,CAACE,KADtB;AAAA,SAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AACJ;;KAxCQnB,W;;GAAAA,W;;AA0CT,MAAMoB,YAAY,GAAG,CAACC,KAAK,GAAGC,YAAT,EAAuBC,MAAvB,KAAkC;AACnD,SAAOF,KAAP;AACH,CAFD;;AAIA,eAAeD,YAAf","sourcesContent":["function MyComponent() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    // Примечание: пустой массив зависимостей [] означает, что\r\n    // этот useEffect будет запущен один раз\r\n    // аналогично componentDidMount()\r\n    useEffect(() => {\r\n        fetch(\"https://api.example.com/items\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n                // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Загрузка...</div>;\r\n    } else {\r\n        return (\r\n            <ul>\r\n                {items.map(item => (\r\n                    <li key={item.id}>\r\n                        {item.name} {item.price}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default filmsReducer;"]},"metadata":{},"sourceType":"module"}