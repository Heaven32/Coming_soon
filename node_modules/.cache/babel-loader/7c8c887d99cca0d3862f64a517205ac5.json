{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heaven\\\\Desktop\\\\react-first\\\\react-social\\\\src\\\\Components\\\\Dialogs\\\\containerIndex.js\";\nimport React from 'react';\nimport { addMessageActionCreator, updateNewMessageActionCreator } from \"../../Redux/dialogs-reducer\";\nimport Dialogs from \"./index\";\nimport StoreContext from \"../../StoreContext\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsContainer = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let state = store.getState();\n\n      const addMessage = () => {\n        store.dispatch(addMessageActionCreator());\n      };\n\n      const changeText = text => {\n        store.dispatch(updateNewMessageActionCreator(text));\n      };\n\n      return /*#__PURE__*/_jsxDEV(Dialogs, {\n        addMessage: addMessage,\n        changeText: changeText,\n        message: state.dialogsPage.messagesData,\n        dialogs: state.dialogsPage.dialogsData,\n        newMessageText: state.dialogsPage.newMessageText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogsContainer;\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = () => {\n  return {};\n};\n\nconst SuperDialogsContainer = connect(f1, f2)(Dialogs);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["C:/Users/Heaven/Desktop/react-first/react-social/src/Components/Dialogs/containerIndex.js"],"names":["React","addMessageActionCreator","updateNewMessageActionCreator","Dialogs","StoreContext","connect","DialogsContainer","props","store","state","getState","addMessage","dispatch","changeText","text","dialogsPage","messagesData","dialogsData","newMessageText","mapStateToProps","mapDispatchToProps","SuperDialogsContainer","f1","f2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,EAAiCC,6BAAjC,QAAqE,6BAArE;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,sBACI,QAAC,YAAD,CAAc,QAAd;AAAA,cAESC,KAAD,IAAW;AACP,UAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAZ;;AAEA,YAAMC,UAAU,GAAG,MAAM;AACrBH,QAAAA,KAAK,CAACI,QAAN,CAAeX,uBAAuB,EAAtC;AACH,OAFD;;AAGA,YAAMY,UAAU,GAAIC,IAAD,IAAU;AACzBN,QAAAA,KAAK,CAACI,QAAN,CAAeV,6BAA6B,CAACY,IAAD,CAA5C;AACH,OAFD;;AAIA,0BACI,QAAC,OAAD;AAAS,QAAA,UAAU,EAAEH,UAArB;AACS,QAAA,UAAU,EAAEE,UADrB;AAES,QAAA,OAAO,EAAEJ,KAAK,CAACM,WAAN,CAAkBC,YAFpC;AAGS,QAAA,OAAO,EAAEP,KAAK,CAACM,WAAN,CAAkBE,WAHpC;AAIS,QAAA,cAAc,EAAER,KAAK,CAACM,WAAN,CAAkBG;AAJ3C;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AAnBT;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAzBD;;KAAMZ,gB;;AA0BN,IAAIa,eAAe,GAAIV,KAAD,IAAW;AAC7B,SAAO;AACHM,IAAAA,WAAW,EAAEN,KAAK,CAACM;AADhB,GAAP;AAGH,CAJD;;AAMA,IAAIK,kBAAkB,GAAG,MAAM;AAC3B,SAAO,EAAP;AAGH,CAJD;;AAMA,MAAMC,qBAAqB,GAAGhB,OAAO,CAACiB,EAAD,EAAKC,EAAL,CAAP,CAAiBpB,OAAjB,CAA9B;AAEA,eAAeG,gBAAf","sourcesContent":["import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./index\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n\r\n                    const addMessage = () => {\r\n                        store.dispatch(addMessageActionCreator())\r\n                    };\r\n                    const changeText = (text) => {\r\n                        store.dispatch(updateNewMessageActionCreator(text));\r\n                    }\r\n\r\n                    return (\r\n                        <Dialogs addMessage={addMessage}\r\n                                 changeText={changeText}\r\n                                 message={state.dialogsPage.messagesData}\r\n                                 dialogs={state.dialogsPage.dialogsData}\r\n                                 newMessageText={state.dialogsPage.newMessageText}/>\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SuperDialogsContainer = connect(f1, f2) (Dialogs);\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}