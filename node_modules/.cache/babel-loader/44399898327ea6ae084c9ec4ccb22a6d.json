{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heaven\\\\Desktop\\\\react-first\\\\react-social\\\\src\\\\Components\\\\Profile\\\\MyPosts\\\\index.js\";\nimport React from 'react';\nimport { addPostActionCreator, updateNewPostActionCreator } from \"../../../Redux/profile-reducer\";\nimport { connect } from \"react-redux\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPosts = props => {\n  const postsElements = props.post.map(element => /*#__PURE__*/_jsxDEV(Post, {\n    name: element.name,\n    age: element.age,\n    countLike: element.countLike,\n    message: element.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 53\n  }, this));\n\n  const onAddPost = () => {\n    props.addPost();\n  };\n\n  const onPostChange = e => {\n    props.updateNewPostActionCreator(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"My posts\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onPostChange,\n          value: props.newPostText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddPost,\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Remove post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), postsElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyPosts;\n\nlet mapStateToProps = state => {\n  return {\n    post: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    updateNewPostActionCreator: text => {\n      dispatch(updateNewPostActionCreator(text));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"sources":["C:/Users/Heaven/Desktop/react-first/react-social/src/Components/Profile/MyPosts/index.js"],"names":["React","addPostActionCreator","updateNewPostActionCreator","connect","Post","MyPosts","props","postsElements","post","map","element","name","age","countLike","message","onAddPost","addPost","onPostChange","e","target","value","newPostText","mapStateToProps","state","profilePage","postData","mapDispatchToProps","dispatch","text","MyPostsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,EAA8BC,0BAA9B,QAA+D,gCAA/D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAMC,aAAa,GAAGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAeC,OAAO,iBAAI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,OAAO,CAACC,IAApB;AACM,IAAA,GAAG,EAAED,OAAO,CAACE,GADnB;AAEM,IAAA,SAAS,EAAEF,OAAO,CAACG,SAFzB;AAGM,IAAA,OAAO,EAAEH,OAAO,CAACI;AAHvB;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAtB;;AAKA,QAAMC,SAAS,GAAG,MAAM;AACpBT,IAAAA,KAAK,CAACU,OAAN;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBZ,IAAAA,KAAK,CAACJ,0BAAN,CAAiCgB,CAAC,CAACC,MAAF,CAASC,KAA1C;AACH,GAFD;;AAIA,sBACI;AAAA,wCAEI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACI;AAAA,+BAAK;AAAU,UAAA,QAAQ,EAAEH,YAApB;AACU,UAAA,KAAK,EAAEX,KAAK,CAACe;AADvB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAEN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EASKR,aATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA1BD;;KAAMF,O;;AA4BN,IAAIiB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHf,IAAAA,IAAI,EAAEe,KAAK,CAACC,WAAN,CAAkBC,QADrB;AAEHJ,IAAAA,WAAW,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAF5B,GAAP;AAIH,CALD;;AAOA,IAAIK,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHX,IAAAA,OAAO,EAAE,MAAM;AACXW,MAAAA,QAAQ,CAAC1B,oBAAoB,EAArB,CAAR;AACH,KAHE;AAIHC,IAAAA,0BAA0B,EAAG0B,IAAD,IAAU;AAClCD,MAAAA,QAAQ,CAACzB,0BAA0B,CAAC0B,IAAD,CAA3B,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMC,gBAAgB,GAAG1B,OAAO,CAACmB,eAAD,EAAkBI,kBAAlB,CAAP,CAA8CrB,OAA9C,CAAzB;AAEA,eAAewB,gBAAf","sourcesContent":["import React from 'react';\r\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Post from \"./Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    const postsElements = props.post.map(element => <Post name={element.name}\r\n                                                          age={element.age}\r\n                                                          countLike={element.countLike}\r\n                                                          message={element.message} />)\r\n\r\n    const onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n    const onPostChange = (e) => {\r\n        props.updateNewPostActionCreator(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My posts\r\n            <div className=\"\">\r\n                <div><textarea onChange={onPostChange}\r\n                               value={props.newPostText} />\r\n                </div>\r\n                <button onClick={onAddPost} >Add post</button>\r\n                <button>Remove post</button>\r\n            </div>\r\n            {postsElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        post: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        updateNewPostActionCreator: (text) => {\r\n            dispatch(updateNewPostActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}